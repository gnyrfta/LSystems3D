package threeDL;

import cheloniidae.*;
import java.awt.*;
import java.util.ArrayList;
import cheloniidae.commands.*;
import cheloniidae.frames.*;

public class LSystem3DDraw  {
  public static void main (String [] args) {
  //The turtle window and turtle are created:
    TurtleWindow w = new TurtleWindow ();
    StandardRotationalTurtle t = new StandardRotationalTurtle ();
    w.add (t);
    t.lineColor (new Color (0.3f, 0.5f, 1.0f));
    t.position(new Vector(0,0,0));
    //The arguments needed to generate the pattern are fetched:
    int iterations = LSystemGUI.iterations;
		int delta = LSystemGUI.getAngle();
		int minusDelta = -delta;
		//The class LSystem3D is instantiated and its method 'pattern' invoked:
    LSystem3D ls3 = new LSystem3D();
		ArrayList<String> drawingTemplate = ls3.pattern(iterations,LSystemGUI.getStartingPattern(),LSystemGUI.getFReplacementRule(),LSystemGUI.getAReplacementRule(),LSystemGUI.getBReplacementRule(),LSystemGUI.getCReplacementRule(),LSystemGUI.getDReplacementRule());
	//The pattern generated by LSystem3D is now in 'drawingTemplate', this arraylist is stepped through, performing the appropriate turtle action for the different symbols in the arraylist:
		for (String i : drawingTemplate){
				if (i.equals("F")){
				//move forward
			  	t.move(20); 	
				}
				else if(i.equals("+")){
					//pass direction positive
					//Turtle3D.turnUAxis();
					//turn left
					t.turn(delta);
				}
				else if(i.equals("-")){
				//pass direction negative
					//Turtle3D.turnUAxis();
					//turn right
					t.turn(minusDelta);
				}
				else if(i.equals("&")){
				//pass direction positive
					//Turtle3D.turnLAxis();
					//pitch down
					t.pitch(delta);
				}
				else if(i.equals("^")){
				//pass direction negative
					//Turtle3D.turnLAxis();
					//pitch up
					t.pitch(minusDelta);
				}								
				else if(i.equals("*")){//in book it is forward slash
				//pass direction positive
					//Turtle3D.turnHAxis();
					//roll left
					t.bank(delta);
				}
				else if(i.equals("/")){
				//pass direction negative
					//Turtle3D.turnHAxis();
					//roll right
					t.bank(minusDelta);
				}	
				else if(i.equals("|")){
				//pass direction 180
					//Turtle3D.turnUAxis();
					//turn around
					t.turn(180);
				}	
				//This part is commented out, since it does not work yet:											
			/*	else if(i.equals("[")){
					//Turtle3D.pushDownState();		
					stack.push();		
				} 
				else if(i.equals("]")){
					//Turtle3D.popUpState();
					stack.pop();				
				} 
				
*/							
				else {
				//Do nothing.
				}  		
          //t.turn (0.5).pitch (0.5).position (new Vector (x * 100, y * 100, z * 100));
  			
		}
	
    w.setVisible (true);
  }
}
